name: "Cypress E2E and Component Testing"

# Skip job run if PR updated
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: { write-all, read-all }

on:
  workflow_dispatch:
  pull_request:
    branches: ["main", "develop"]
  push:
    branches: ["main", "develop"]

jobs:
  e2e-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run e2e tests
        uses: cypress-io/github-action@v5
        with:
          browser: "chrome"
          command: pnpm run test:cypress

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-coverage
          path: coverage

  preview-deploy:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: ["prepare", "e2e-tests"]
    steps:
      - uses: actions/checkout@v3

      - name: Installs cypress-coverage
        uses: actions/download-artifact@v3
        with:
          name: cypress-coverage
          path: coverage

      - name: Deploy branch coverage to Netlify as preview
        uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          build_directory: coverage/lcov-report
          install_command: "echo Skipping installing the dependencies"
          build_command: "echo Skipping building the web files"

      - name: Status check
        uses: Sibz/github-status-action@v1.1.6
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: Netlify preview
          state: success
          target_url: ${{ env.NETLIFY_PREVIEW_URL }}

  production-deploy:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: ["prepare", "e2e-tests"]
    steps:
      - uses: actions/checkout@v3

      - name: Installs cypress-coverage
        uses: actions/download-artifact@v3
        with:
          name: cypress-coverage
          path: coverage

      - name: Deploy develop branch coverage to Netlify as production
        uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: coverage/lcov-report
          install_command: "echo Skipping installing the dependencies"
          build_command: "echo Skipping building the web files"

      - name: Status check
        uses: Sibz/github-status-action@v1.1.6
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: Netlify production
          state: success
          target_url: ${{ env.NETLIFY_LIVE_URL }}
